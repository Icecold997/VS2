


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       **************
    2 00000000         ;* Hochschule für Technik und Wirtschaft                
                                    *
    3 00000000         ;* Fakultät für Ingenieurwissenschaften            *
    4 00000000         ;* Labor für Eingebettete Systeme           *
    5 00000000         ;* Mikroprozessortechnik                              *
    6 00000000         ;*******************************************************
                       **************
    7 00000000         ;*                                                      
                               *
    8 00000000         ;* atol.S:                   *
    9 00000000         ;* Erhält Zeiger auf Ascii-String einer Dezimalzahl     
                        *
   10 00000000         ;* Rechnet um in Format unsigned long, Rückgabe des Wert
                       s in R0   *
   11 00000000         ;*                                                      
                               *
   12 00000000         ;*******************************************************
                       **************
   13 00000000         ;* Aufgabe-Nr.:   2.3       *                       *
   14 00000000         ;*                 *                       *
   15 00000000         ;*******************************************************
                       **************
   16 00000000         ;* Gruppen-Nr.:    *           *
   17 00000000         ;*                 *                       *
   18 00000000         ;*******************************************************
                       **************
   19 00000000         ;* Name / Matrikel-Nr.: Sander Timo / 3670635           
                                    *
   20 00000000         ;*                Born Thilo / 3670759           *
   21 00000000         ;*                 *                       *
   22 00000000         ;*******************************************************
                       **************
   23 00000000         ;* Abgabedatum:         18.12.2017              *
   24 00000000         ;*                 *                       *
   25 00000000         ;*******************************************************
                       **************
   26 00000000         
   27 00000000         ;*******************************************************
                       **************
   28 00000000         ;* Daten-Bereich                        *
   29 00000000         ;*******************************************************
                       **************
   30 00000000                 AREA             Daten, DATA, READWRITE
   31 00000000         
   32 00000000         ;*******************************************************
                       **************
   33 00000000         ;* Programm-Bereich                             *
   34 00000000         ;*******************************************************
                       **************
   35 00000000                 AREA             Programm, CODE, READONLY
   36 00000000                 ARM
   37 00000000 E321F010 
                       Reset_Handler
                               MSR              CPSR_c, #0x10 ; User Mode aktiv
                                                            ieren
   38 00000004         
   39 00000004         ;*******************************************************



ARM Macro Assembler    Page 2 


                       **************
   40 00000004         ;* Hier das eigene Programm einfügen            *
   41 00000004         ;*******************************************************
                       **************
   42 00000004         ATol    FUNCTION
   43 00000004         
   44 00000004         ;; @param R0: Start eines Strings, Dezimalzahl als Ascii
                       zeichen,0 terminiert
   45 00000004         ;; Gültige Werte müssen in ein long passen (-2^31 - 2^31
                       -1)
   46 00000004         ;; @return: R0: Wert dargestellt als long
   47 00000004         ;
   48 00000004         
   49 00000004         Start
   50 00000004         
   51 00000004 E1A01000 
                       atol    MOV              R1, R0      ;schreibzeiger
   52 00000008 E3A00000        MOV              R0, #0      ;R0 = ergebnis
   53 0000000C E3A0200A        MOV              R2, #0xA    ;; R2 = 10
   54 00000010         
   55 00000010         
   56 00000010 E4D14001 
                       loop1   LDRB             R4,[R1],#1  ;;Lade ein Byte aus
                                                             String_1 in R1, in
                                                            krementiere nach
   57 00000014         ;;dem Laden die Speicheradresse in R1 um 1
   58 00000014 E3540000        CMP              R4,#0x0     ;;Abbruchbedingung 
                                                            string terminiert m
                                                            it 0
   59 00000018 0A000007        BEQ              checkNegativ
   60 0000001C E354002D        CMP              R4 ,#0x2D   ;;checken ob negati
                                                            ve zahl
   61 00000020 03A05001        MOVEQ            R5,#1       ;; wen negativ r5 a
                                                            uf 1 setzen
   62 00000024 0AFFFFF9        BEQ              loop1       ;; und nächste ziff
                                                            er auslesen  
   63 00000028 E354002B        CMP              R4,#0x2B    ;; checken ob posit
                                                            ive zahl
   64 0000002C 0AFFFFF7        BEQ              loop1       ;; wen positiv näch
                                                            ste ziffer auslesen
                                                            
   65 00000030         
   66 00000030 E2444030        SUB              R4, #0x30   ;; subtrahiert 30 v
                                                            on ascii  um zahl z
                                                            u bekommen  (ascii 
                                                            1 = 31)
   67 00000034 E0204092        MLA              R0, R2, R0, R4 ;;  R0 = 10 * R0
                                                             + R4 
   68 00000038 EAFFFFF4        B                loop1
   69 0000003C         
   70 0000003C         checkNegativ
   71 0000003C E3550001        CMP              R5,#1       ;; checken ob zahl 
                                                            negativ war
   72 00000040 02600000        RSBEQ            R0,R0,#0x00 ;; wen zahl negativ
                                                             war subtrahiere po
                                                            sitive von 0 
   73 00000044         
   74 00000044 E12FFF1E 
                       term    BX               LR



ARM Macro Assembler    Page 3 


   75 00000048                 ENDFUNC
   76 00000048         
   77 00000048         
   78 00000048                 EXPORT           ATol[CODE]
   79 00000048                 END
Command Line: --debug --xref --apcs=interwork --depend=.\objects\atol.d -o.\obj
ects\atol.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Philips --predefine="__RTX SETA 1" --predefine="__EVAL SETA 1" --list=.\listi
ngs\atol.lst atol.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Daten 00000000

Symbol: Daten
   Definitions
      At line 30 in file atol.s
   Uses
      None
Comment: Daten unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ATol 00000004

Symbol: ATol
   Definitions
      At line 42 in file atol.s
   Uses
      At line 78 in file atol.s
Comment: ATol used once
Programm 00000000

Symbol: Programm
   Definitions
      At line 35 in file atol.s
   Uses
      None
Comment: Programm unused
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 37 in file atol.s
   Uses
      None
Comment: Reset_Handler unused
Start 00000004

Symbol: Start
   Definitions
      At line 49 in file atol.s
   Uses
      None
Comment: Start unused
atol 00000004

Symbol: atol
   Definitions
      At line 51 in file atol.s
   Uses
      None
Comment: atol unused
checkNegativ 0000003C

Symbol: checkNegativ
   Definitions
      At line 70 in file atol.s
   Uses
      At line 59 in file atol.s
Comment: checkNegativ used once
loop1 00000010

Symbol: loop1
   Definitions
      At line 56 in file atol.s
   Uses
      At line 62 in file atol.s
      At line 64 in file atol.s
      At line 68 in file atol.s

term 00000044



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: term
   Definitions
      At line 74 in file atol.s
   Uses
      None
Comment: term unused
8 symbols
341 symbols in table
